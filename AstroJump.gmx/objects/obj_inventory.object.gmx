<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Cusror initialize
cursorx=0;
cursory=0;
cursor_h=0;
cursor_v=0;
image_speed=0.10;
//Slots
slot1x =320;
slot2x = 444;
slot3x=580;
slot4x=704;
slot1y=250;
slot2y=340;
slot3y=420;
slot4y=510;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cursor_h==0)
{
    cursorx=slot1x;
}

if(cursor_h==1)
{
    cursorx=slot2x;
}

if(cursor_h==2)
{
    cursorx=slot3x;
}

if(cursor_h==3)
{
    cursorx=slot4x;
}

if(cursor_v==0)
{
    cursory=slot1y;
}

if(cursor_v==1)
{
    cursory=slot2y;
}

if(cursor_v==2)
{
    cursory=slot3y;
}

if(cursor_v==3)
{
    cursory=slot4y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_inventario,0,view_wview/2-sprite_width/2,view_hview/2-sprite_height/2);
draw_sprite(spr_cursor,-1,cursorx,cursory);

//boots
if(global.boots)
{
    if(!file_exists("savedata.ini"))
    {
        global.slot[global.boots_slot,1]=1;
    }
    switch(global.boots_slot)
    {
        case 1:
        draw_sprite(spr_objetos,1,slot1x,slot1y);
        break;
        case 2:
        draw_sprite(spr_objetos,1,slot2x,slot1y);
        break;
        case 3:
        draw_sprite(spr_objetos,1,slot3x,slot1y);
        break;
        case 4:
        draw_sprite(spr_objetos,1,slot4x,slot1y);
        break;
        case 5:
        draw_sprite(spr_objetos,1,slot1x,slot2y);
        break;
        case 6:
        draw_sprite(spr_objetos,1,slot2x,slot2y);
        break;
        case 7:
        draw_sprite(spr_objetos,1,slot3x,slot2y);
        break;
        case 8:
        draw_sprite(spr_objetos,1,slot4x,slot2y);
        break;
        case 9:
        draw_sprite(spr_objetos,1,slot1x,slot3y);
        break;
        case 10:
        draw_sprite(spr_objetos,1,slot2x,slot3y);
        break;
        case 11:
        draw_sprite(spr_objetos,1,slot3x,slot3y);
        break;
        case 12:
        draw_sprite(spr_objetos,1,slot3x,slot4y);
        break;
        case 13:
        draw_sprite(spr_objetos,1,slot1x,slot4y);
        break;
        case 14:
        draw_sprite(spr_objetos,1,slot2x,slot4y);
        break;
        case 15:
        draw_sprite(spr_objetos,1,slot3x,slot4y);
        break;
        case 16:
        draw_sprite(spr_objetos,1,slot3x,slot4y);
        break;
    }
}

//welder
if(global.welder)
{
    if(!file_exists("savedata.ini"))
    {
        global.slot[global.welder_slot,1]=0;
    }
    switch(global.welder_slot)
    {
        case 1:
        draw_sprite(spr_objetos,0,slot1x,slot1y);
        break;
        case 2:
        draw_sprite(spr_objetos,0,slot2x,slot1y);
        break;
        case 3:
        draw_sprite(spr_objetos,0,slot3x,slot1y);
        break;
        case 4:
        draw_sprite(spr_objetos,0,slot4x,slot1y);
        break;
        case 5:
        draw_sprite(spr_objetos,0,slot1x,slot2y);
        break;
        case 6:
        draw_sprite(spr_objetos,0,slot2x,slot2y);
        break;
        case 7:
        draw_sprite(spr_objetos,0,slot3x,slot2y);
        break;
        case 8:
        draw_sprite(spr_objetos,0,slot4x,slot2y);
        break;
        case 9:
        draw_sprite(spr_objetos,0,slot1x,slot3y);
        break;
        case 10:
        draw_sprite(spr_objetos,0,slot2x,slot3y);
        break;
        case 11:
        draw_sprite(spr_objetos,0,slot3x,slot3y);
        break;
        case 12:
        draw_sprite(spr_objetos,0,slot3x,slot4y);
        break;
        case 13:
        draw_sprite(spr_objetos,0,slot1x,slot4y);
        break;
        case 14:
        draw_sprite(spr_objetos,0,slot2x,slot4y);
        break;
        case 15:
        draw_sprite(spr_objetos,0,slot3x,slot4y);
        break;
        case 16:
        draw_sprite(spr_objetos,0,slot3x,slot4y);
        break;
    }
}

//bombs
if(global.bombs)
{
    if(!file_exists("savedata.ini"))
    {
         global.slot[global.bombs_slot,1]=2;
    }

    switch(global.bombs_slot)
    {
        case 1:
        draw_sprite(spr_objetos,2,slot1x,slot1y);
        break;
        case 2:
        draw_sprite(spr_objetos,2,slot2x,slot1y);
        break;
        case 3:
        draw_sprite(spr_objetos,2,slot3x,slot1y);
        break;
        case 4:
        draw_sprite(spr_objetos,2,slot4x,slot1y);
        break;
        case 5:
        draw_sprite(spr_objetos,2,slot1x,slot2y);
        break;
        case 6:
        draw_sprite(spr_objetos,2,slot2x,slot2y);
        break;
        case 7:
        draw_sprite(spr_objetos,2,slot3x,slot2y);
        break;
        case 8:
        draw_sprite(spr_objetos,2,slot4x,slot2y);
        break;
        case 9:
        draw_sprite(spr_objetos,2,slot1x,slot3y);
        break;
        case 10:
        draw_sprite(spr_objetos,2,slot2x,slot3y);
        break;
        case 11:
        draw_sprite(spr_objetos,2,slot3x,slot3y);
        break;
        case 12:
        draw_sprite(spr_objetos,2,slot3x,slot4y);
        break;
        case 13:
        draw_sprite(spr_objetos,2,slot1x,slot4y);
        break;
        case 14:
        draw_sprite(spr_objetos,2,slot2x,slot4y);
        break;
        case 15:
        draw_sprite(spr_objetos,2,slot3x,slot4y);
        break;
        case 16:
        draw_sprite(spr_objetos,2,slot3x,slot4y);
        break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
